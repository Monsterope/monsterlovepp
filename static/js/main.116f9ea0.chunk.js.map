{"version":3,"sources":["img/IMG_1860.jpg","img/IMG_1861.jpg","logo.svg","img/ok_meme.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","class","tabindex","uk-slideshow","src","myope","alt","uk-cover","width","height","myopes","href","uk-slidenav-previous","uk-slideshow-item","uk-slidenav-next","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wNC8DzBC,0LArDX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,kDAAkDC,SAAS,KAAKC,eAAa,yEACtFN,EAAAC,EAAAC,cAAA,MAAIE,MAAM,sBACRJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,IAAOC,IAAI,GAAGC,YAAA,IACxBV,EAAAC,EAAAC,cAAA,OAAKE,MAAM,4GACXJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,mBAAmBO,MAAM,KAAKC,OAAO,KAAKL,IAAKM,MACxDb,EAAAC,EAAAC,cAAA,MAAIE,MAAM,oBAAV,oBACAJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,oBAAT,eACAJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,oBAAT,iCAGJJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKK,IAAKM,IAAQJ,IAAI,GAAGC,YAAA,IACzBV,EAAAC,EAAAC,cAAA,OAAKE,MAAM,4GACTJ,EAAAC,EAAAC,cAAA,MAAIE,MAAM,oBAAV,MACAJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,oBAAT,8DAGJJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,IAAOC,IAAI,GAAGC,YAAA,IACxBV,EAAAC,EAAAC,cAAA,OAAKE,MAAM,4GACTJ,EAAAC,EAAAC,cAAA,MAAIE,MAAM,oBAAV,MACAJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,oBAAT,+DAKNJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,4DAA4DU,KAAK,IAAIC,wBAAA,EAAqBC,oBAAkB,aACrHhB,EAAAC,EAAAC,cAAA,KAAGE,MAAM,6DAA6DU,KAAK,IAAIG,oBAAA,EAAiBD,oBAAkB,UAItHhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBArCRe,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.116f9ea0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_1860.73b43606.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_1861.3ffcfaca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok_meme.5dc783d5.png\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport oks from './img/ok_meme.png'\nimport myope from './img/IMG_1860.jpg'\nimport myopes from './img/IMG_1861.jpg'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n          <div class=\"uk-position-relative uk-visible-toggle uk-light\" tabindex=\"-1\" uk-slideshow=\"animation: fade; ratio: 12:3; autoplay: true; autoplay-interval: 1000\">\n            <ul class=\"uk-slideshow-items\">\n              <li>\n                <img src={myope} alt=\"\" uk-cover />\n                <div class=\"uk-overlay uk-overlay-primary uk-position-right uk-text-center uk-transition-slide-right uk-width-medium\">\n                <img class=\"uk-border-circle\" width=\"70\" height=\"70\" src={myopes}></img>\n                  <h3 class=\"uk-margin-remove\">Dachawat Fangnok</h3>\n                  <p class=\"uk-margin-remove\">088-0542049</p>\n                  <p class=\"uk-margin-remove\">dachawat.fang57@sskru.ac.th</p>\n                </div>\n              </li>\n              <li>\n                <img src={myopes} alt=\"\" uk-cover />\n                <div class=\"uk-overlay uk-overlay-primary uk-position-right uk-text-center uk-transition-slide-right uk-width-medium\">\n                  <h3 class=\"uk-margin-remove\">My</h3>\n                  <p class=\"uk-margin-remove\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                </div>\n              </li>\n              <li>\n                <img src={myope} alt=\"\" uk-cover />\n                <div class=\"uk-overlay uk-overlay-primary uk-position-right uk-text-center uk-transition-slide-right uk-width-medium\">\n                  <h3 class=\"uk-margin-remove\">My</h3>\n                  <p class=\"uk-margin-remove\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                </div>\n              </li>\n            </ul>\n\n            <a class=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"#\" uk-slidenav-previous uk-slideshow-item=\"previous\"></a>\n            <a class=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"#\" uk-slidenav-next uk-slideshow-item=\"next\"></a>\n\n          </div>\n\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n\n          {/* <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}